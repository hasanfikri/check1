/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package browse;

/**
 *
 * @author King Fikri
 */
/*
 *  BACA DENGAN TELITI !!!
 * 
 *  Anda boleh menggunakan, mengubah, menghapus, menambah, dan
 *  melakukan hal yang anda inginkan ke dalam source code ini.
 * 
 *  Dan saya tidak bertanggung jawab atas kesalahan,
 *  bug, atau keanehan yang ada dalam source code ini, dan
 *  saya juga TIDAK MENERIMA PERTANYAAN dari Anda
 *  mengenai isi source code ini.
 * 
 *  Semoga source code ini bermanfaat bagi Anda, dan juga
 *  bermanfaat bagi project yang sedang Anda buat.
 * 
 *  Salam saya, Eko Kurniawan Khannedy
 */

/*
 * GlassPaneLoading.java
 *
 * Created on 04 Feb 09, 13:31:41
 */
//package echo.swingmakeover.chapter12;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.AlphaComposite;
import java.awt.GradientPaint;
import java.awt.event.KeyAdapter;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.geom.GeneralPath;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;


/**
 *
 * @author echo
 */
public class GlassPaneLoading extends javax.swing.JPanel {

    private Color colorTranparan;

    /** Creates new form GlassPaneLoading */
    public GlassPaneLoading() {
        colorTranparan = new Color(255, 255, 255, 175);
        initComponents();

        addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                JOptionPane.showMessageDialog(GlassPaneLoading.this, "Maaf Aktifitas Di Block");
            }
        });
        addMouseMotionListener(new MouseAdapter() {
        });
        addMouseWheelListener(new MouseAdapter() {
        });
        addKeyListener(new KeyAdapter() {
        });
    }

    @Override
    protected void paintComponent(final Graphics g) {
        super.paintComponent(g);
        final GradientPaint paint = new GradientPaint(0, 0, Color.CYAN, getWidth(), getHeight(), Color.BLUE);
        final GeneralPath path = new GeneralPath();
        path.moveTo(0, 0);
        path.lineTo(0, getHeight());
        path.curveTo(0, getHeight(), getWidth()/5, getHeight()/5, getWidth(),0);
        path.closePath();
        //final Graphics2D gd = (Graphics2D) gd.create();
        Graphics2D gd = (Graphics2D) g.create();
        gd.setPaint(paint);
        gd.setComposite(AlphaComposite.SrcOver.derive(0.3F));
        gd.fill(path);
        gd.dispose();
        /*gd.setColor(colorTranparan);
        gd.fillRect(0, 0, getWidth(), getHeight());
        gd.dispose();

        super.paintComponent(g);*/
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new JProgressBar();

        setOpaque(false);
        setLayout(new GridBagLayout());

        jProgressBar1.setIndeterminate(true);
        jProgressBar1.setPreferredSize(new Dimension(200, 14));
        add(jProgressBar1, new GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables


public static void main (String[] args) 
{
	new GlassPaneLoading().setVisible(true);
}
}
